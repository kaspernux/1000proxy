## XUI nginx site template
## Replace YOUR_XUI_DOMAIN with the target hostname before enabling

server {
    listen 80;
    listen [::]:80;
    server_name YOUR_XUI_DOMAIN;

    # ACME challenge for Certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # Redirect root to the UI base path
    location = / {
        return 301 https://$host/proxy/;
    }

    # Ensure /proxy without trailing slash redirects to /proxy/
    location = /proxy {
        return 301 https://$host/proxy/;
    }

    # All other traffic should go to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name YOUR_XUI_DOMAIN;

    # If Cloudflare Origin certs are present, they will be written to /etc/ssl/cf_origin.pem and /etc/ssl/cf_origin.key
    ssl_certificate /etc/ssl/cf_origin.pem;
    ssl_certificate_key /etc/ssl/cf_origin.key;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Optional: include a per-site admin allow/deny file created by the deploy script
    # File path: /etc/nginx/conf.d/xui_admin_allow.conf
    # The deploy script will create this file when ADMIN_IPS are provided.
    include /etc/nginx/conf.d/xui_admin_allow.conf;

    # Serve the UI under /proxy/ and forward to the local x-ui service listening on 127.0.0.1:1111
    location /proxy/ {
        proxy_pass http://127.0.0.1:1111/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_buffering off;
        proxy_redirect off;
        # increase timeout for long polling
        proxy_read_timeout 3600s;
    }

    # Optional: serve other static resources or health checks as needed
    location /healthz {
        return 200 'ok';
    }
}
